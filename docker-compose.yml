
services:
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - mynetwork
    env_file:
      - ./client/.env
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./server:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    networks:
      - mynetwork
    env_file:
      - ./server/.env
    depends_on:
      database:
        condition: service_healthy
    restart: always

  database:
      image: postgis/postgis:latest
      container_name: database
      restart: always
      environment:
        POSTGRES_DB: daba_cities
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: secret
      ports:
        - "5432:5432"
      networks:
        - mynetwork
      volumes:
        - pgdata:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U admin -d daba_cities"]
        interval: 10s
        timeout: 5s
        retries: 5

networks:
  mynetwork:
    driver: bridge

volumes:
  pgdata:
